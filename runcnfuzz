#!/bin/sh
usage () {
cat <<EOF
usage: runcnfuzz [-h][-q][-i][-I][-f][-n][-k][-t <sec>] <prg> [ <arg> ... ]
EOF
}
die () {
  echo "*** runcnfuzz: $*" 1>&2
  exit 1
}
prg=""
qbf=""
ignorewitness=no
ignorestatus=no
first=no
nodd=no
cnfuzzopts=""
TIMEOUT=""
while [ $# -gt 0 ]
do
  case $1 in
    -h) usage; exit 0;;
    -f) first=yes;;
    -n) nodd=yes;;
    -q) qbf="-q";;
    -i) ignorewitness=yes;ignorestatus=yes;;
    -I) ignorestatus=yes;;
    --version) echo "2"; exit 0;;
    --tiny) cnfuzzopts="$cnfuzzopts --tiny";;
    --small) cnfuzzopts="$cnfuzzopts --small";;
    -t)
      shift
      [ $# = 0 ] && die "argument to '-t' missing"
      TIMEOUT="$1"
      export TIMEOUT
      TIMEOUT10="`expr $TIMEOUT \* 10`"
      ;;
    -*) die "invalid command line option";;
    *) prg="$*"; break;;
  esac
  shift
done
[ x"$prg" = x ] && die "no program specified"
base=/tmp/runcnfuzz-$$
cnf=$base.cnf
sol=$base.sol
err=$base.err
log=runcnfuzz-$$.log
rm -f $base*
trap "rm -f $base*;exit 1" 2 9 15
i=0
echo "[runcnfuzz] running $prg"
echo "[runcnfuzz] logging $log"
[ x"$qbf" = x ] || echo "[runcnfuzz] generating QBF formulas"
[ $ignorestatus = yes ] && echo "[runcnfuzz] ignoring zero exit code"
[ $ignorewitness = yes ] && echo "[runcnfuzz] ignoring witness"
while true
do
  rm -f $cnf
  cnfuzz $cnfuzzopts $qbf $CNFUZZOPTIONS > $cnf
  seed=`grep 'c seed' $cnf|head -1|awk '{print $NF}'`
  head="`awk '/p cnf /{print $3, $4}' $cnf`"
  printf "%d %d %d %d\r" "$i" "$seed" $head
  i=`expr $i + 1`
  rm -f $sol
  $prg $cnf 1>$sol 2>$err
  res=$?
  case $res in
    10) 
      [ x"$qbf" = x ] || continue
      [ $ignorewitness = yes ] && continue
      precochk $cnf $sol >/dev/null 2>/dev/null
      [ $? = 10 ] && continue
      ;;
    20) continue;;
    0) [ $ignorestatus = yes ] && continue;;
  esac
  cp -p $sol bug-$seed.log
  cp -p $err bug-$seed.err
  head="`awk '/p cnf /{print $3, $4}' $cnf`"
  red=red-$seed.cnf
  bug=bug-$seed.cnf
  echo "[runcnfuzz] $bug $head"
  echo $seed >> $log
  mv $cnf $bug
  #if [ x"$qbf" = x ]
  #then
  if [ $nodd = yes ]
  then
    cp $bug $red
  elif [ x"TIMEOUT10" = x ]
  then
    cnfdd $bug $red $prg 1>/dev/null 2>/dev/null
  else
    TIMEOUT="$TIMEOUT10" cnfdd $bug $red $prg 1>/dev/null 2>/dev/null
  fi
  #else
  #  qbfdd.py -v -v -o $red $bug $prg 1>/dev/null 2>/dev/null
  #fi
  head="`awk '/p cnf /{print $3, $4}' $red`"
  echo "[runcnfuzz] $red $head"
  [ $first = yes ] && exit 0
done
rm -f $base*
